name: LineageOS Builder

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/LineageOS/android'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'lineage-20.0'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/johnt1989/android_device_samsung_d2q'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'lineage'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/samsung/d2q'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'd2q'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'lineage_d2q'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "::endgroup::"

    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v3
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps

    - name: Prepare The Environment
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install \
          git gperf groff bc build-essential bison ccache gcc gcc-multilib libstdc++6 g++ g++-multilib dpkg-dev rsync \
          minicom curl libswitch-perl optipng gettext-base jfsutils flex aria2 zip maven bzip2 unzip wget make tree liblz4-tool -y
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt install \
          libzstd-dev lsb-base automake openssl procps pcmciautils squashfs-tools xsltproc pwgen policycoreutils python \
          python-dev python-all-dev util-linux x11proto-core-dev lzop pngcrush schedtool imagemagick -y
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt install \
          lzma ncftp libfuse2 libc6-dev libncursesw5 libncursesw5-dev lib32ncursesw5-dev libfreetype6-dev \
          libreadline5 lib32readline-dev libssl-dev libpng-dev liblz4-dev libtinfo6 liblzma-dev zlib1g-dev -y
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt install \
          libxml-simple-perl libbz2-1.0 libxml-sax-base-perl libwxgtk3.0-gtk3-dev libghc-bzlib-dev libx11-dev lib32z1-dev \
          libxml2-utils libgl1-mesa-dev libsdl1.2-dev lib32z-dev libxml2 libbz2-dev -y

    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "johnt1989"
        git config --global user.email "johnjohnt1989@gmail.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd

    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace
      
    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Check Build Tree
      uses: haya14busa/action-cond@v1
      id: buildtree
      with:
        cond: ${{ github.event.inputs.MANIFEST_BRANCH == 'lineage-20.0' || github.event.inputs.MANIFEST_BRANCH == '' }}
        if_true: lineage-20.0
        if_false: 

    - name: Sync Device Dependencies
      run: |
        bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
        repo sync -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make clean && make -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*vendor*.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: .img
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
